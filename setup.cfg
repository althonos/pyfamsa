[metadata]
name = pyfamsa
version = attr: pyfamsa._version.__version__
author = Martin Larralde
author_email = martin.larralde@embl.de
url = https://github.com/althonos/pyfamsa
description = Cython bindings and Python interface to FAMSA, an algorithm for ultra-scale multiple sequence alignments.
long_description = file: README.md
long_description_content_type = text/markdown
license = GPLv3
platform = any
keywords = bioinformatics, sequence, alignment, protein, MSA
classifier =
    Development Status :: 3 - Alpha
    Intended Audience :: Developers
    Intended Audience :: Science/Research
    License :: OSI Approved :: GNU General Public License v3 (GPLv3)
    Operating System :: OS Independent
    Programming Language :: C
    Programming Language :: Cython
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Programming Language :: Python :: 3.12
    Programming Language :: Python :: Implementation :: CPython
    Programming Language :: Python :: Implementation :: PyPy
    Topic :: Scientific/Engineering :: Bio-Informatics
    Topic :: Scientific/Engineering :: Medical Science Apps.
    Typing :: Typed
project_urls =
    Documentation = https://pyfamsa.readthedocs.io/en/stable/
    Bug Tracker = https://github.com/althonos/pyfamsa/issues
    Changelog = https://github.com/althonos/pyfamsa/blob/main/CHANGELOG.md
    Coverage = https://codecov.io/gh/althonos/pyfamsa/
    Builds = https://github.com/althonos/pyfamsa/actions
    PyPI = https://pypi.org/project/pyfamsa

[options]
zip_safe = false
packages = pyfamsa, pyfamsa.tests, pyfamsa.tests.data
include_package_data = false
python_requires = >=3.6
setup_requires =
    setuptools >=46.4
    cython ~=3.0
    scoring-matrices ~=0.2
    semantic-version ~=2.10
install_requires =
    scoring-matrices ~=0.2
tests_require =
    importlib-resources ; python_version < '3.9'

# [options.entry_points]
# console_scripts =
#     pyfamsa = pyfamsa.cli:main

[options.package_data]
pyfamsa = py.typed, *.pyi
pyfamsa.tests = requirements.txt
pyfamsa.tests.data = *

[coverage:run]
plugins = Cython.Coverage

[coverage:report]
include = pyfamsa/*
omit = pyfamsa/tests/*
show_missing = true
exclude_lines =
    pragma: no cover
    if typing.TYPE_CHECKING:
    @abc.abstractmethod
    @abc.abstractproperty
    raise NotImplementedError
    return NotImplemented
    raise MemoryError()

[pydocstyle]
inherit = false
ignore = D102,D105,D200,D203,D213,D406,D407
match-dir = (?!tests)(?!docs)[^\.].*
match = (?!test)(?!setup)[^\._].*\.py

[mypy]
disallow_any_decorated = true
disallow_any_generics = true
disallow_any_unimported = false
disallow_subclassing_any = false
disallow_untyped_calls = true
disallow_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_return_any = true
exclude = pyfamsa/tests/*

[mypy-pyfamsa.tests]
disallow_untyped_defs = false

[isort]
known_first_party = pyfamsa, famsa
known_standard_library = cpython, cython, _unicode
known_third_party = libc, libcpp
line_length = 88
profile = black
skip_gitignore = true
skip_glob = vendor/FAMSA/*
