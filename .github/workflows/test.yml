name: Test

on:
  - push
  - pull_request

jobs:

  test_linux:
    name: Test (Linux)
    runs-on: ubuntu-20.04
    env:
      OS: Linux
    strategy:
      fail-fast: false
      matrix:
        include:
        - python-version: 3.7
          python-release: v3.7
          python-impl: CPython
        - python-version: 3.8
          python-release: v3.8
          python-impl: CPython
        - python-version: 3.9
          python-release: v3.9
          python-impl: CPython
        - python-version: '3.10'
          python-release: v3.10
          python-impl: CPython
        - python-version: '3.11'
          python-release: v3.11
          python-impl: CPython
        - python-version: '3.12'
          python-release: v3.12
          python-impl: CPython
        - python-version: pypy-3.7
          python-release: v3.7
          python-impl: PyPy
        - python-version: pypy-3.8
          python-release: v3.8
          python-impl: PyPy
        - python-version: pypy-3.9
          python-release: v3.9
          python-impl: PyPy
        - python-version: pypy-3.10
          python-release: v3.10
          python-impl: PyPy
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install CI requirements
      run: python -m pip install -r .github/workflows/requirements.txt
    - name: Install test requirements
      run: python -m pip install -r pyfamsa/tests/requirements.txt
    - name: Build C extension in debug mode
      run: python setup.py build_ext --inplace --debug
    - name: Test with coverage
      run: python -m coverage run -m unittest discover -vv
    - name: Upload to Codecov
      if: matrix.python-impl == 'CPython'
      uses: codecov/codecov-action@v4
      with:
        flags: ${{ matrix.python-impl }},${{ matrix.python-release }},${{ env.OS }}
        name: test-python-${{ matrix.python-version }}
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}

  test_osx:
    name: Test (OSX)
    runs-on: macos-12
    env:
      OS: OSX
    strategy:
      fail-fast: false
      matrix:
        include:
        - python-version: 3.7
          python-release: v3.7
          python-impl: CPython
        - python-version: 3.8
          python-release: v3.8
          python-impl: CPython
        - python-version: 3.9
          python-release: v3.9
          python-impl: CPython
        - python-version: '3.10'
          python-release: v3.10
          python-impl: CPython
        - python-version: '3.11'
          python-release: v3.11
          python-impl: CPython
        - python-version: '3.12'
          python-release: v3.12
          python-impl: CPython
        - python-version: pypy-3.7
          python-release: v3.7
          python-impl: PyPy
        - python-version: pypy-3.8
          python-release: v3.8
          python-impl: PyPy
        - python-version: pypy-3.9
          python-release: v3.9
          python-impl: PyPy
        - python-version: pypy-3.10
          python-release: v3.10
          python-impl: PyPy
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install CI requirements
      run: python -m pip install -r .github/workflows/requirements.txt
    - name: Install test requirements
      run: python -m pip install -r pyfamsa/tests/requirements.txt
    - name: Build C extension in debug mode
      run: python setup.py build_ext --inplace --debug
    - name: Test with coverage
      run: python -m coverage run -m unittest discover -vv
    - name: Upload to Codecov
      if: matrix.python-impl == 'CPython'
      uses: codecov/codecov-action@v4
      with:
        flags: ${{ matrix.python-impl }},${{ matrix.python-release }},${{ env.OS }}
        name: test-python-${{ matrix.python-version }}
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}

  test_windows:
    name: Test (Windows)
    runs-on: windows-latest
    env:
      OS: Windows
    strategy:
      fail-fast: false
      matrix:
        include:
        - python-version: 3.7
          python-release: v3.7
          python-impl: CPython
        - python-version: 3.8
          python-release: v3.8
          python-impl: CPython
        - python-version: 3.9
          python-release: v3.9
          python-impl: CPython
        - python-version: '3.10'
          python-release: v3.10
          python-impl: CPython
        - python-version: '3.11'
          python-release: v3.11
          python-impl: CPython
        - python-version: '3.12'
          python-release: v3.12
          python-impl: CPython
        - python-version: pypy-3.7
          python-release: v3.7
          python-impl: PyPy
        - python-version: pypy-3.8
          python-release: v3.8
          python-impl: PyPy
        - python-version: pypy-3.9
          python-release: v3.9
          python-impl: PyPy
        - python-version: pypy-3.10
          python-release: v3.10
          python-impl: PyPy
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        architecture: x64
    - name: Install Python requirements
      run: python -m pip install -r .github/workflows/requirements.txt
    - name: Build C extension
      run: python setup.py build_ext --inplace
    - name: Test without coverage
      run: python -m unittest discover -vv
