name: Test

on:
  - push
  - pull_request

jobs:

  test_linux:
    name: Test (Linux)
    runs-on: ubuntu-22.04
    env:
      OS: Linux
    strategy:
      fail-fast: false
      matrix:
        include:
        - python-version: 3.7
          python-release: v3.7
          python-impl: CPython
        - python-version: 3.8
          python-release: v3.8
          python-impl: CPython
        - python-version: 3.9
          python-release: v3.9
          python-impl: CPython
        - python-version: '3.10'
          python-release: v3.10
          python-impl: CPython
        - python-version: 3.11
          python-release: v3.11
          python-impl: CPython
        - python-version: 3.12
          python-release: v3.12
          python-impl: CPython
        - python-version: 3.13
          python-release: v3.13
          python-impl: CPython
        - python-version: pypy-3.7
          python-release: v3.7
          python-impl: PyPy
        - python-version: pypy-3.8
          python-release: v3.8
          python-impl: PyPy
        - python-version: pypy-3.9
          python-release: v3.9
          python-impl: PyPy
        - python-version: pypy-3.10
          python-release: v3.10
          python-impl: PyPy
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Update pip
      run: python -m pip install -U pip wheel setuptools
    - name: Install Python requirements
      run: python -m pip install -r .github/workflows/requirements.txt
    - name: Build extension in debug mode
      run: python -m pip install -v -e . --no-build-isolation
    - name: Test extension
      run: python -m unittest pyfamsa.tests -vv
    # - name: Upload to Codecov
    #   if: matrix.python-impl == 'CPython'
    #   uses: codecov/codecov-action@v3
    #   with:
    #     flags: ${{ matrix.python-impl }},${{ matrix.python-release }},${{ env.OS }}
    #     name: test-python-${{ matrix.python-version }}
    #     fail_ci_if_error: true
    #     token: ${{ secrets.CODECOV_TOKEN }}

  test_osx:
    name: Test (OSX)
    runs-on: macos-13
    env:
      OS: OSX
    strategy:
      fail-fast: false
      matrix:
        include:
        - python-version: 3.7
          python-release: v3.7
          python-impl: CPython
        - python-version: 3.8
          python-release: v3.8
          python-impl: CPython
        - python-version: 3.9
          python-release: v3.9
          python-impl: CPython
        - python-version: '3.10'
          python-release: v3.10
          python-impl: CPython
        - python-version: '3.11'
          python-release: v3.11
          python-impl: CPython
        - python-version: '3.12'
          python-release: v3.12
          python-impl: CPython
        - python-version: '3.13'
          python-release: v3.13
          python-impl: CPython
        - python-version: pypy-3.7
          python-release: v3.7
          python-impl: PyPy
        - python-version: pypy-3.8
          python-release: v3.8
          python-impl: PyPy
        - python-version: pypy-3.9
          python-release: v3.9
          python-impl: PyPy
        - python-version: pypy-3.10
          python-release: v3.10
          python-impl: PyPy
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Setup deployment target
      shell: bash
      if: ${{ startsWith(matrix.python-version, 'pypy') || matrix.python-version == '3.11' || matrix.python-version == '3.12' }}
      run: echo "MACOSX_DEPLOYMENT_TARGET=10.12" >> $GITHUB_ENV
    - name: Update pip
      run: python -m pip install -U pip wheel setuptools
    - name: Install Python requirements
      run: python -m pip install -r .github/workflows/requirements.txt
    - name: Build extension in debug mode
      run: python -m pip install -v -e . --no-build-isolation
    - name: Test extension
      run: python -m unittest pyfamsa.tests -vv
    # - name: Upload to Codecov
    #   if: matrix.python-impl == 'CPython'
    #   uses: codecov/codecov-action@v3
    #   with:
    #     flags: ${{ matrix.python-impl }},${{ matrix.python-release }},${{ env.OS }}
    #     name: test-python-${{ matrix.python-version }}
    #     fail_ci_if_error: true
    #     token: ${{ secrets.CODECOV_TOKEN }}

  test_windows:
    name: Test (Windows)
    runs-on: windows-latest
    env:
      OS: Windows
    strategy:
      fail-fast: false
      matrix:
        include:
        - python-version: 3.7
          python-release: v3.7
          python-impl: CPython
        - python-version: 3.8
          python-release: v3.8
          python-impl: CPython
        - python-version: 3.9
          python-release: v3.9
          python-impl: CPython
        - python-version: '3.10'
          python-release: v3.10
          python-impl: CPython
        - python-version: '3.11'
          python-release: v3.11
          python-impl: CPython
        - python-version: '3.12'
          python-release: v3.12
          python-impl: CPython
        - python-version: '3.13'
          python-release: v3.13
          python-impl: CPython
        - python-version: pypy-3.7
          python-release: v3.7
          python-impl: PyPy
        - python-version: pypy-3.8
          python-release: v3.8
          python-impl: PyPy
        - python-version: pypy-3.9
          python-release: v3.9
          python-impl: PyPy
        - python-version: pypy-3.10
          python-release: v3.10
          python-impl: PyPy
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        architecture: x64
    - name: Update pip
      run: python -m pip install -U pip wheel setuptools
    - name: Install Python requirements
      run: python -m pip install -r .github/workflows/requirements.txt
    - name: Build extension in debug mode
      run: python -m pip install -v . --no-build-isolation
    - name: Test extension
      run: python -m unittest pyfamsa.tests -vv
